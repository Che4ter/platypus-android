<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" name="PMD Coding Rules from projectDefault" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd" xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>These rules references were generated using QAPlug 1.3.11 and QAPlug - PMD 1.3.7</description>
  <rule ref="rulesets/java/android.xml/CallSuperFirst">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/BooleanInstantiation">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/BrokenNullCheck">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/ExtendsObject">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/codesize.xml/TooManyFields">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/42.xml/TooManyMethods">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/AvoidLiteralsInIfCondition">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/AvoidPrefixingMethodParameters">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/CallSuperInConstructor">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/DontImportSun">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/coupling.xml/LooseCoupling">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AvoidConstantsInterface">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/BadComparison">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/CloseResource">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/ConfusingTernary">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/EqualsNull">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/GodClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/IdempotentOperations">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/ImmutableField">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/InstantiationToGetClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/OptimizableToArrayCall">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/PreserveStackTrace">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/SimplifyConditional">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/SingularField">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/SwitchDensity">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/design.xml/UseSingleton">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyIfStmt">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyStatementBlock">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptySwitchStatements">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyTryBlock">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/imports.xml/DontImportJavaLang">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/imports.xml/DuplicateImports">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/imports.xml/ImportFromSamePackage">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/imports.xml/TooManyStaticImports">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/imports.xml/UnusedImports">
    <priority>5</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/JUnitSpelling">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/junit.xml/UseAssertTrueInsteadOfAssertEquals">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/logging-java.xml/SystemPrintln">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/AvoidAssertAsIdentifier">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/AvoidEnumAsIdentifier">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/35.xml/IntegerInstantiation">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/ReplaceEnumerationWithIterator">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/ReplaceHashtableWithMap">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/ReplaceVectorWithList">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/ClassNamingConventions">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/MethodNamingConventions">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/NoPackage">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/ShortMethodName">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/naming.xml/VariableNamingConventions">
    <properties />
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/AddEmptyString">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidLosingExceptionInformation">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/InefficientStringBuffering">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/39.xml/StringBufferInstantiationWithChar">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/StringInstantiation">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/StringToString">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/releases/41.xml/UseEqualsToCompareStrings">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/strings.xml/UseIndexOfChar">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/releases/34.xml/UseStringBufferLength">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/releases/38.xml/UselessStringValueOf">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/typeresolution.xml/LooseCoupling">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/typeresolution.xml/SignatureDeclareThrowsException">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/typeresolution.xml/UnusedImports">
    <priority>5</priority>
  </rule>
  <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn">
    <priority>4</priority>
  </rule>
  <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">
    <priority>2</priority>
  </rule>
  <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml/UnusedModifier">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
    <priority>3</priority>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
    <priority>3</priority>
  </rule>
</ruleset>

