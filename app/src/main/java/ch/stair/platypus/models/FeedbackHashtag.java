package ch.stair.platypus.models;

import java.util.Date;

import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Relation;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.BoxStore;
import io.objectbox.relation.ToOne;
import io.objectbox.Box;

@Entity
public class FeedbackHashtag {
    @Id(assignable = true)
    private long id;
    private Date lastchanged;

    long hashtagId;
    long feedbackId;

    @Relation
    private Hashtag hashtag;
    @Relation
    private Feedback feedback;
    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;
    @Internal
    @Generated(798012468)
    transient ToOne<Hashtag> hashtagToOne = new ToOne<>(this,
            FeedbackHashtag_.hashtag);
    @Internal
    @Generated(562547837)
    transient ToOne<Feedback> feedbackToOne = new ToOne<>(this,
            FeedbackHashtag_.feedback);

    @Generated(125048206)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public FeedbackHashtag(long id, Date lastchanged, long hashtagId,
            long feedbackId) {
        this.id = id;
        this.lastchanged = lastchanged;
        this.hashtagId = hashtagId;
        this.feedbackId = feedbackId;
    }
    @Generated(692002213)
    public FeedbackHashtag() {
    }
    public long getId() {
        return id;
    }
    public void setId(long id) {
        this.id = id;
    }
    public Date getLastchanged() {
        return lastchanged;
    }
    public void setLastchanged(Date lastchanged) {
        this.lastchanged = lastchanged;
    }
    /** To-one relationship, resolved on first access. */
    @Generated(1610713702)
    public Hashtag getHashtag() {
        hashtag = hashtagToOne.getTarget(this.hashtagId);
        return hashtag;
    }
    /** Set the to-one relation including its ID property. */
    @Generated(145984011)
    public void setHashtag(Hashtag hashtag) {
        hashtagToOne.setTarget(hashtag);
        this.hashtag = hashtag;
    }
    /** To-one relationship, resolved on first access. */
    @Generated(1754456867)
    public Feedback getFeedback() {
        feedback = feedbackToOne.getTarget(this.feedbackId);
        return feedback;
    }
    /** Set the to-one relation including its ID property. */
    @Generated(238760638)
    public void setFeedback(Feedback feedback) {
        feedbackToOne.setTarget(feedback);
        this.feedback = feedback;
    }
}
